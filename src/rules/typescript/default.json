{
  "@typescript-eslint/await-thenable": [
    "error"
  ],
  "@typescript-eslint/class-literal-property-style": [
    "error",
    "getters"
  ],
  "@typescript-eslint/comma-spacing": [
    "error",
    {
      "after": true,
      "before": false
    }
  ],
  "@typescript-eslint/explicit-function-return-type": [
    "error",
    {
      "allowExpressions": false,
      "allowHigherOrderFunctions": false,
      "allowTypedFunctionExpressions": false
    }
  ],
  "@typescript-eslint/explicit-member-accessibility": [
    "error",
    {
      "accessibility": "explicit",
      "overrides": {
        "accessors": "explicit",
        "constructors": "explicit",
        "methods": "explicit",
        "parameterProperties": "explicit",
        "properties": "explicit"
      }
    }
  ],
  "@typescript-eslint/indent": [
    "error",
    "tab",
    {
      "ArrayExpression": 1,
      "CallExpression": {
        "arguments": 1
      },
      "FunctionDeclaration": {
        "body": 1,
        "parameters": 1
      },
      "FunctionExpression": {
        "body": 1,
        "parameters": 1
      },
      "ImportDeclaration": 1,
      "MemberExpression": 1,
      "ObjectExpression": 1,
      "SwitchCase": 1,
      "VariableDeclarator": 1,
      "flatTernaryExpressions": true,
      "ignoreComments": false,
      "ignoredNodes": [],
      "outerIIFEBody": 1
    }
  ],
  "@typescript-eslint/interface-name-prefix": [
    "error",
    {
      "allowUnderscorePrefix": false,
      "prefixWithI": "always"
    }
  ],
  "@typescript-eslint/no-base-to-string": [
    "error"
  ],
  "@typescript-eslint/no-empty-interface": [
    "warn",
    {
      "allowSingleExtends": false
    }
  ],
  "@typescript-eslint/no-explicit-any": [
    "warn",
    {
      "fixToUnknown": true,
      "ignoreRestArgs": false
    }
  ],
  "@typescript-eslint/no-extra-semi": [
    "error"
  ],
  "@typescript-eslint/no-implied-eval": [
    "error"
  ],
  "@typescript-eslint/no-inferrable-types": [
    "off"
  ],
  "@typescript-eslint/no-magic-numbers": [
    "off"
  ],
  "@typescript-eslint/no-misused-promises": [
    "error",
    {
      "checksConditionals": true,
      "checksVoidReturn": false
    }
  ],
  "@typescript-eslint/no-namespace": [
    "error",
    {
      "allowDeclarations": true,
      "allowDefinitionFiles": true
    }
  ],
  "@typescript-eslint/no-type-alias": [
    "error",
    {
      "allowAliases": "in-unions-and-intersections",
      "allowCallbacks": "always",
      "allowConditionalTypes": "always",
      "allowConstructors": "never",
      "allowLiterals": "never",
      "allowMappedTypes": "never",
      "allowTupleTypes": "in-unions-and-intersections"
    }
  ],
  "@typescript-eslint/no-unnecessary-condition": [
    "error",
    {
      "allowConstantLoopConditions": false,
      "checkArrayPredicates": true,
      "ignoreRhs": true
    }
  ],
  "@typescript-eslint/no-unnecessary-type-assertion": [
    "error"
  ],
  "@typescript-eslint/no-unsafe-call": [
    "error"
  ],
  "@typescript-eslint/no-unsafe-member-access": [
    "error"
  ],
  "@typescript-eslint/no-unsafe-return": [
    "error"
  ],
  "@typescript-eslint/no-untyped-public-signature": [
    "warn",
    {
      "ignoredMethods": [
        "constructor"
      ]
    }
  ],
  "@typescript-eslint/no-unused-vars": [
    "error",
    {
      "args": "after-used",
      "caughtErrors": "all",
      "ignoreRestSiblings": false,
      "vars": "all"
    }
  ],
  "@typescript-eslint/no-unused-vars-experimental": [
    "error"
  ],
  "@typescript-eslint/no-use-before-define": [
    "error",
    {
      "classes": true,
      "enums": true,
      "functions": true,
      "typedefs": true,
      "variables": true
    }
  ],
  "@typescript-eslint/no-useless-constructor": [
    "error"
  ],
  "@typescript-eslint/no-var-requires": [
    "error"
  ],
  "@typescript-eslint/prefer-readonly-parameter-types": [
    "error",
    {
      "checkParameterProperties": true
    }
  ],
  "@typescript-eslint/quotes": [
    "error",
    "double",
    {
      "allowTemplateLiterals": false,
      "avoidEscape": false
    }
  ],
  "@typescript-eslint/require-await": [
    "warn"
  ],
  "@typescript-eslint/semi": [
    "error",
    "always",
    {
      "omitLastInOneLineBlock": false
    }
  ],
  "@typescript-eslint/space-before-function-paren": [
    "error",
    {
      "anonymous": "always",
      "asyncArrow": "always",
      "named": "never"
    }
  ],
  "@typescript-eslint/strict-boolean-expressions": [
    "error",
    {
      "allowNullable": false,
      "allowSafe": false,
      "ignoreRhs": false
    }
  ],
  "@typescript-eslint/type-annotation-spacing": [
    "error",
    {
      "after": true,
      "before": false,
      "overrides": {
        "arrow": {
          "after": true,
          "before": true
        },
        "colon": {
          "after": true,
          "before": false
        },
        "parameter": {
          "after": true,
          "before": false
        },
        "property": {
          "after": true,
          "before": false
        },
        "returnType": {
          "after": true,
          "before": false
        },
        "variable": {
          "after": true,
          "before": false
        }
      }
    }
  ],
  "@typescript-eslint/typedef": [
    "error",
    {
      "arrayDestructuring": true,
      "arrowParameter": true,
      "memberVariableDeclaration": true,
      "objectDestructuring": true,
      "parameter": true,
      "propertyDeclaration": true,
      "variableDeclaration": true,
      "variableDeclarationIgnoreFunction": false
    }
  ],
  "comma-spacing": [
    "off"
  ],
  "indent": [
    "off"
  ],
  "no-extra-semi": [
    "off"
  ],
  "no-implied-eval": [
    "off"
  ],
  "no-unused-vars": [
    "off"
  ],
  "no-use-before-define": [
    "off"
  ],
  "no-useless-constructor": [
    "off"
  ],
  "quotes": [
    "off"
  ],
  "require-await": [
    "off"
  ],
  "semi": [
    "off"
  ],
  "space-before-function-paren": [
    "off"
  ]
}
